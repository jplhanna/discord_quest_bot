version: "3.7"
x-common-variables: &common-variables
  DATABASE_NAME: ${DATABASE_NAME}
  DATABASE_USER: ${DATABASE_USER}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD}

x-common-db-variables: &common-db-variables
  POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  POSTGRES_USER: ${DATABASE_USER}

services:
  backend:
    container_name: backend-${IMAGE_TAG-latest}
    image: discord_bot/backend:${IMAGE_TAG-latest}
    environment:
      <<: *common-variables
      DISCORD_ACCOUNT_TOKEN: ${DISCORD_ACCOUNT_TOKEN}
      DATABASE_HOST: 'postgres'
      DISCORD_OWNER_ID: ${DISCORD_OWNER_ID}
    volumes:
      - .:/app
    networks:
      - network
    build:
      context: .
      dockerfile: Dockerfile
      target: install-poetry
    depends_on:
      - "postgres"
    command: python src/run.py

  postgres:
    container_name: postgres-${IMAGE_TAG-latest}
    hostname: "postgres"
    image: postgres:14
    command: [ "postgres", "-c", "listen_addresses=*", "-c", "log_statement=all" ]
    restart: always
    environment:
      <<: *common-db-variables
      POSTGRES_DB: ${DATABASE_NAME}
      PGDATA: /var/lib/postgresql/data
    networks:
      - network
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - db:/var/lib/postgresql/data

  test-db:
    image: postgres:14
    environment:
      <<: *common-db-variables
      POSTGRES_DB: ${TEST_DATABASE_NAME}
    ports:
      - "5433:5432"

  test-pipeline:
    container_name: test-pipeline-${IMAGE_TAG-latest}
    image: discord_bot/test_pipeline:${IMAGE_TAG-latest}
    environment:
      <<: *common-variables
      DATABASE_HOST: 'test-db'
      DATABASE_NAME: ${TEST_DATABASE_NAME}
      DATABASE_PORT: '5432'
      DISCORD_ACCOUNT_TOKEN: "fake_token"
      LOGGER__HANDLERS__BASIC_HANDLER__HANDLER_CLASS: 'logging.StreamHandler'
      LOGGER__HANDLERS__BASIC_HANDLER__LEVEL: 20
      LOGGER__HANDLERS__BASIC_HANDLER__FORMATTER: 'simple_formatter'
      LOGGER__HANDLERS__BASIC_HANDLER__STREAM: 'ext://sys.stdout'
    volumes:
      - .:/app
    build:
      context: .
      dockerfile: Dockerfile
      target: install-dev
    depends_on:
      - "test-db"

networks:
  network:
    name: ${IMAGE_TAG-latest}-network

volumes:
  db:
    name: ${IMAGE_TAG-latest}-pgdata
